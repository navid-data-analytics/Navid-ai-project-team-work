// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ai_decision_service.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	ai_decision_service.proto

It has these top-level messages:
	Message
	MessageCreateRequest
	MessageListRequest
	State
	StateSaveRequest
	StateGetRequest
	StateListRequest
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Message        string                     `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	AppId          int32                      `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Type           string                     `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Version        int32                      `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Data           []byte                     `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	GenerationTime *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=generation_time,json=generationTime" json:"generation_time,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Message) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetGenerationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTime
	}
	return nil
}

type MessageCreateRequest struct {
	AppId int32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// type + version together MUST uniquely identify a template. Furthermore, message data MUST
	// be compatible with all previous versions of a template type.
	Type    string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Version int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	// The decision not to use explicit messages was made to enable analytics to use the service in a data driven fashion
	// with minimal chance for logical updates. Thus the RPC uses an ambiguous format for data.
	// Initially we intended this to  be a map<string,any>. However, working with protobuf any is super cumbersome
	// making it more convenient to pass around a rendered json blob.
	// The downside is producers need to unmarshal the json themselves which adds a bit of overhead.
	// We should be able to abstract this away with client wrappings though.
	Data           []byte                     `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	GenerationTime *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=generation_time,json=generationTime" json:"generation_time,omitempty"`
}

func (m *MessageCreateRequest) Reset()                    { *m = MessageCreateRequest{} }
func (m *MessageCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageCreateRequest) ProtoMessage()               {}
func (*MessageCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MessageCreateRequest) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *MessageCreateRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MessageCreateRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MessageCreateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MessageCreateRequest) GetGenerationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTime
	}
	return nil
}

type MessageListRequest struct {
	AppId int32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// version range to include
	MinVersion int32 `protobuf:"varint,3,opt,name=min_version,json=minVersion" json:"min_version,omitempty"`
	MaxVersion int32 `protobuf:"varint,4,opt,name=max_version,json=maxVersion" json:"max_version,omitempty"`
	// generation time range to include
	GenerationTimeFrom *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=generation_time_from,json=generationTimeFrom" json:"generation_time_from,omitempty"`
	GenerationTimeTo   *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=generation_time_to,json=generationTimeTo" json:"generation_time_to,omitempty"`
}

func (m *MessageListRequest) Reset()                    { *m = MessageListRequest{} }
func (m *MessageListRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageListRequest) ProtoMessage()               {}
func (*MessageListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MessageListRequest) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *MessageListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MessageListRequest) GetMinVersion() int32 {
	if m != nil {
		return m.MinVersion
	}
	return 0
}

func (m *MessageListRequest) GetMaxVersion() int32 {
	if m != nil {
		return m.MaxVersion
	}
	return 0
}

func (m *MessageListRequest) GetGenerationTimeFrom() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTimeFrom
	}
	return nil
}

func (m *MessageListRequest) GetGenerationTimeTo() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTimeTo
	}
	return nil
}

type State struct {
	AppId          int32                      `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Keyword        string                     `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	Data           []byte                     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	GenerationTime *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=generation_time,json=generationTime" json:"generation_time,omitempty"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *State) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *State) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *State) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *State) GetGenerationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTime
	}
	return nil
}

type StateSaveRequest struct {
	AppId          int32                      `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Keyword        string                     `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	Data           []byte                     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	GenerationTime *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=generation_time,json=generationTime" json:"generation_time,omitempty"`
}

func (m *StateSaveRequest) Reset()                    { *m = StateSaveRequest{} }
func (m *StateSaveRequest) String() string            { return proto.CompactTextString(m) }
func (*StateSaveRequest) ProtoMessage()               {}
func (*StateSaveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StateSaveRequest) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *StateSaveRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *StateSaveRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StateSaveRequest) GetGenerationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTime
	}
	return nil
}

type StateGetRequest struct {
	AppId          int32                      `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Keyword        string                     `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	GenerationTime *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=generation_time,json=generationTime" json:"generation_time,omitempty"`
}

func (m *StateGetRequest) Reset()                    { *m = StateGetRequest{} }
func (m *StateGetRequest) String() string            { return proto.CompactTextString(m) }
func (*StateGetRequest) ProtoMessage()               {}
func (*StateGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StateGetRequest) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *StateGetRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *StateGetRequest) GetGenerationTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTime
	}
	return nil
}

type StateListRequest struct {
	AppId   int32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Keyword string `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	// generation time range to include
	GenerationTimeFrom *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=generation_time_from,json=generationTimeFrom" json:"generation_time_from,omitempty"`
	GenerationTimeTo   *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=generation_time_to,json=generationTimeTo" json:"generation_time_to,omitempty"`
}

func (m *StateListRequest) Reset()                    { *m = StateListRequest{} }
func (m *StateListRequest) String() string            { return proto.CompactTextString(m) }
func (*StateListRequest) ProtoMessage()               {}
func (*StateListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StateListRequest) GetAppId() int32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *StateListRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *StateListRequest) GetGenerationTimeFrom() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTimeFrom
	}
	return nil
}

func (m *StateListRequest) GetGenerationTimeTo() *google_protobuf.Timestamp {
	if m != nil {
		return m.GenerationTimeTo
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "callstats.ai_decision.Message")
	proto.RegisterType((*MessageCreateRequest)(nil), "callstats.ai_decision.MessageCreateRequest")
	proto.RegisterType((*MessageListRequest)(nil), "callstats.ai_decision.MessageListRequest")
	proto.RegisterType((*State)(nil), "callstats.ai_decision.State")
	proto.RegisterType((*StateSaveRequest)(nil), "callstats.ai_decision.StateSaveRequest")
	proto.RegisterType((*StateGetRequest)(nil), "callstats.ai_decision.StateGetRequest")
	proto.RegisterType((*StateListRequest)(nil), "callstats.ai_decision.StateListRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AIDecisionMessageService service

type AIDecisionMessageServiceClient interface {
	Create(ctx context.Context, in *MessageCreateRequest, opts ...grpc.CallOption) (*Message, error)
	List(ctx context.Context, in *MessageListRequest, opts ...grpc.CallOption) (AIDecisionMessageService_ListClient, error)
}

type aIDecisionMessageServiceClient struct {
	cc *grpc.ClientConn
}

func NewAIDecisionMessageServiceClient(cc *grpc.ClientConn) AIDecisionMessageServiceClient {
	return &aIDecisionMessageServiceClient{cc}
}

func (c *aIDecisionMessageServiceClient) Create(ctx context.Context, in *MessageCreateRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := grpc.Invoke(ctx, "/callstats.ai_decision.AIDecisionMessageService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aIDecisionMessageServiceClient) List(ctx context.Context, in *MessageListRequest, opts ...grpc.CallOption) (AIDecisionMessageService_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AIDecisionMessageService_serviceDesc.Streams[0], c.cc, "/callstats.ai_decision.AIDecisionMessageService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &aIDecisionMessageServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AIDecisionMessageService_ListClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type aIDecisionMessageServiceListClient struct {
	grpc.ClientStream
}

func (x *aIDecisionMessageServiceListClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AIDecisionMessageService service

type AIDecisionMessageServiceServer interface {
	Create(context.Context, *MessageCreateRequest) (*Message, error)
	List(*MessageListRequest, AIDecisionMessageService_ListServer) error
}

func RegisterAIDecisionMessageServiceServer(s *grpc.Server, srv AIDecisionMessageServiceServer) {
	s.RegisterService(&_AIDecisionMessageService_serviceDesc, srv)
}

func _AIDecisionMessageService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AIDecisionMessageServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callstats.ai_decision.AIDecisionMessageService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AIDecisionMessageServiceServer).Create(ctx, req.(*MessageCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AIDecisionMessageService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MessageListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AIDecisionMessageServiceServer).List(m, &aIDecisionMessageServiceListServer{stream})
}

type AIDecisionMessageService_ListServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type aIDecisionMessageServiceListServer struct {
	grpc.ServerStream
}

func (x *aIDecisionMessageServiceListServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

var _AIDecisionMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "callstats.ai_decision.AIDecisionMessageService",
	HandlerType: (*AIDecisionMessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AIDecisionMessageService_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _AIDecisionMessageService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ai_decision_service.proto",
}

// Client API for AIDecisionStateService service

type AIDecisionStateServiceClient interface {
	Save(ctx context.Context, in *StateSaveRequest, opts ...grpc.CallOption) (*State, error)
	Get(ctx context.Context, in *StateGetRequest, opts ...grpc.CallOption) (*State, error)
	List(ctx context.Context, in *StateListRequest, opts ...grpc.CallOption) (AIDecisionStateService_ListClient, error)
}

type aIDecisionStateServiceClient struct {
	cc *grpc.ClientConn
}

func NewAIDecisionStateServiceClient(cc *grpc.ClientConn) AIDecisionStateServiceClient {
	return &aIDecisionStateServiceClient{cc}
}

func (c *aIDecisionStateServiceClient) Save(ctx context.Context, in *StateSaveRequest, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := grpc.Invoke(ctx, "/callstats.ai_decision.AIDecisionStateService/Save", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aIDecisionStateServiceClient) Get(ctx context.Context, in *StateGetRequest, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := grpc.Invoke(ctx, "/callstats.ai_decision.AIDecisionStateService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aIDecisionStateServiceClient) List(ctx context.Context, in *StateListRequest, opts ...grpc.CallOption) (AIDecisionStateService_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AIDecisionStateService_serviceDesc.Streams[0], c.cc, "/callstats.ai_decision.AIDecisionStateService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &aIDecisionStateServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AIDecisionStateService_ListClient interface {
	Recv() (*State, error)
	grpc.ClientStream
}

type aIDecisionStateServiceListClient struct {
	grpc.ClientStream
}

func (x *aIDecisionStateServiceListClient) Recv() (*State, error) {
	m := new(State)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AIDecisionStateService service

type AIDecisionStateServiceServer interface {
	Save(context.Context, *StateSaveRequest) (*State, error)
	Get(context.Context, *StateGetRequest) (*State, error)
	List(*StateListRequest, AIDecisionStateService_ListServer) error
}

func RegisterAIDecisionStateServiceServer(s *grpc.Server, srv AIDecisionStateServiceServer) {
	s.RegisterService(&_AIDecisionStateService_serviceDesc, srv)
}

func _AIDecisionStateService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StateSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AIDecisionStateServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callstats.ai_decision.AIDecisionStateService/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AIDecisionStateServiceServer).Save(ctx, req.(*StateSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AIDecisionStateService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StateGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AIDecisionStateServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callstats.ai_decision.AIDecisionStateService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AIDecisionStateServiceServer).Get(ctx, req.(*StateGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AIDecisionStateService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StateListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AIDecisionStateServiceServer).List(m, &aIDecisionStateServiceListServer{stream})
}

type AIDecisionStateService_ListServer interface {
	Send(*State) error
	grpc.ServerStream
}

type aIDecisionStateServiceListServer struct {
	grpc.ServerStream
}

func (x *aIDecisionStateServiceListServer) Send(m *State) error {
	return x.ServerStream.SendMsg(m)
}

var _AIDecisionStateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "callstats.ai_decision.AIDecisionStateService",
	HandlerType: (*AIDecisionStateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _AIDecisionStateService_Save_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AIDecisionStateService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _AIDecisionStateService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ai_decision_service.proto",
}

func init() { proto.RegisterFile("ai_decision_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 541 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x95, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb5, 0xb1, 0x9d, 0x88, 0x29, 0xa2, 0xd5, 0xaa, 0x45, 0x26, 0x42, 0xd4, 0xca, 0x01,
	0x02, 0x48, 0x6e, 0x15, 0x9e, 0x00, 0x8a, 0x28, 0x15, 0xad, 0x90, 0x9c, 0xc2, 0x81, 0x8b, 0xb5,
	0x8d, 0xa7, 0xd1, 0x8a, 0x38, 0x6b, 0xbc, 0xdb, 0xd0, 0x3e, 0x00, 0xe2, 0xcc, 0x11, 0x89, 0xc7,
	0xe0, 0x05, 0xb8, 0xf0, 0x12, 0xbc, 0x0c, 0x5a, 0x7b, 0x4d, 0xfe, 0xc8, 0x76, 0x92, 0x0a, 0xa9,
	0x27, 0xef, 0x5a, 0xdf, 0x8e, 0x7f, 0x33, 0xf3, 0xed, 0x18, 0xee, 0x31, 0x1e, 0x46, 0x38, 0xe0,
	0x92, 0x8b, 0x71, 0x28, 0x31, 0x9d, 0xf0, 0x01, 0xfa, 0x49, 0x2a, 0x94, 0xa0, 0x3b, 0x03, 0x36,
	0x1a, 0x49, 0xc5, 0x94, 0xf4, 0x67, 0x44, 0xed, 0xdd, 0xa1, 0x10, 0xc3, 0x11, 0xee, 0x65, 0xa2,
	0xb3, 0x8b, 0xf3, 0x3d, 0xc5, 0x63, 0x94, 0x8a, 0xc5, 0x49, 0x7e, 0xae, 0xf3, 0x8b, 0x40, 0xeb,
	0x04, 0xa5, 0x64, 0x43, 0xa4, 0x2e, 0xb4, 0xe2, 0x7c, 0xe9, 0x12, 0x8f, 0x74, 0x6f, 0x05, 0xc5,
	0x96, 0xee, 0x40, 0x93, 0x25, 0x49, 0xc8, 0x23, 0xb7, 0xe1, 0x91, 0xae, 0x13, 0x38, 0x2c, 0x49,
	0x8e, 0x22, 0x4a, 0xc1, 0x56, 0x57, 0x09, 0xba, 0x56, 0xa6, 0xce, 0xd6, 0x3a, 0xc8, 0x04, 0x53,
	0xfd, 0x71, 0xd7, 0xce, 0xb4, 0xc5, 0x56, 0xab, 0x23, 0xa6, 0x98, 0xeb, 0x78, 0xa4, 0x7b, 0x3b,
	0xc8, 0xd6, 0xf4, 0x00, 0x36, 0x87, 0x38, 0xc6, 0x94, 0x29, 0x9d, 0x92, 0x86, 0x73, 0x9b, 0x1e,
	0xe9, 0x6e, 0xf4, 0xda, 0x7e, 0x4e, 0xee, 0x17, 0xe4, 0xfe, 0x69, 0x41, 0x1e, 0xdc, 0x99, 0x1e,
	0xd1, 0x2f, 0x3b, 0x3f, 0x09, 0x6c, 0x9b, 0x1c, 0x0e, 0x52, 0x64, 0x0a, 0x03, 0xfc, 0x74, 0x81,
	0x52, 0xcd, 0x60, 0x93, 0x32, 0xec, 0x46, 0x39, 0xb6, 0x55, 0x8e, 0x6d, 0xd7, 0x63, 0x3b, 0x6b,
	0x63, 0x7f, 0x6f, 0x00, 0x35, 0xd8, 0xc7, 0x5c, 0xaa, 0x6b, 0x40, 0xef, 0xc2, 0x46, 0xcc, 0xc7,
	0xe1, 0x3c, 0x38, 0xc4, 0x7c, 0xfc, 0xde, 0xb0, 0x6b, 0x01, 0xbb, 0x0c, 0xe7, 0x1b, 0x02, 0x31,
	0xbb, 0x2c, 0x04, 0xc7, 0xb0, 0xbd, 0x90, 0x48, 0x78, 0x9e, 0x8a, 0x78, 0x85, 0x6c, 0xe8, 0x7c,
	0x36, 0xaf, 0x52, 0x11, 0xd3, 0xd7, 0x40, 0x17, 0xa3, 0x29, 0xb1, 0x42, 0x43, 0xb7, 0xe6, 0x63,
	0x9d, 0x8a, 0xce, 0x37, 0x02, 0x4e, 0x5f, 0x31, 0x85, 0x55, 0xe5, 0x70, 0xa1, 0xf5, 0x11, 0xaf,
	0x3e, 0x8b, 0x34, 0x32, 0x15, 0x29, 0xb6, 0xff, 0xfa, 0x65, 0xd5, 0xf7, 0xcb, 0x5e, 0xbb, 0x5f,
	0x3f, 0x08, 0x6c, 0x65, 0x4c, 0x7d, 0x36, 0x59, 0x66, 0xb1, 0x1b, 0xc0, 0xfb, 0x4a, 0x60, 0x33,
	0xc3, 0x3b, 0x44, 0x75, 0x6d, 0xba, 0x12, 0x12, 0x6b, 0x6d, 0x92, 0x3f, 0x45, 0xa1, 0x56, 0xb0,
	0x75, 0x35, 0x4a, 0x95, 0x35, 0xad, 0xff, 0x68, 0x4d, 0x7b, 0x7d, 0x6b, 0xf6, 0x7e, 0x13, 0x70,
	0x9f, 0x1f, 0xbd, 0x34, 0x13, 0xd6, 0x5c, 0xe0, 0x7e, 0x3e, 0x8c, 0xe9, 0x3b, 0x68, 0xe6, 0x23,
	0x88, 0x3e, 0xf5, 0x4b, 0x27, 0xb2, 0x5f, 0x36, 0xa8, 0xda, 0x0f, 0xea, 0xc5, 0xb4, 0x0f, 0xb6,
	0xae, 0x25, 0x7d, 0x5c, 0xaf, 0x9b, 0xa9, 0xf7, 0xb2, 0x90, 0xfb, 0xa4, 0xf7, 0xa5, 0x01, 0x77,
	0xa7, 0x89, 0xe4, 0xce, 0x36, 0x69, 0x9c, 0x80, 0xad, 0x4d, 0x4e, 0x1f, 0x55, 0x04, 0x59, 0xbc,
	0x06, 0xed, 0xfb, 0x75, 0x42, 0xfa, 0x06, 0xac, 0x43, 0x54, 0xf4, 0x61, 0x9d, 0x68, 0xea, 0xda,
	0x25, 0xc1, 0xde, 0x9a, 0x5a, 0xd4, 0xb2, 0xcd, 0x56, 0xa2, 0x36, 0xdc, 0x3e, 0x79, 0xf1, 0x04,
	0x3c, 0x2e, 0x2a, 0x34, 0xe6, 0x27, 0xfb, 0xa1, 0x99, 0x59, 0x43, 0x9e, 0xe5, 0xcf, 0x67, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x39, 0x04, 0xac, 0x8a, 0x07, 0x00, 0x00,
}
